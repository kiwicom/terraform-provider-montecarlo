name: Release

# This GitHub action creates a release when a tag that matches the pattern
# "v[0-9]+.[0-9]+.[0-9]+*" (e.g. v0.1.0) is created.
on:
  push:
    branches:
      - master
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

# Releases need permissions to read and write the repository contents.
# GitHub considers creating releases and uploading assets as writing contents.
permissions:
  contents: write

jobs:
  tests:
    uses: ./.github/workflows/test.yml
    secrets:
      ACC_TEST_MC_API_KEY_ID: ${{ secrets.ACC_TEST_MC_API_KEY_ID }}
      ACC_TEST_MC_API_KEY_TOKEN: ${{ secrets.ACC_TEST_MC_API_KEY_TOKEN }}
      ACC_TEST_BQ_SERVICE_ACCOUNT: ${{ secrets.ACC_TEST_BQ_SERVICE_ACCOUNT }}
      ACC_TEST_PG_HOST: ${{ secrets.ACC_TEST_PG_HOST }}
      ACC_TEST_PG_PORT: ${{ secrets.ACC_TEST_PG_PORT }}
      ACC_TEST_PG_DATABASE: ${{ secrets.ACC_TEST_PG_DATABASE }}
      ACC_TEST_PG_USER: ${{ secrets.ACC_TEST_PG_USER }}
      ACC_TEST_PG_PASSWORD: ${{ secrets.ACC_TEST_PG_PASSWORD }}
  coverage-check:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          cache: true
          go-version-file: 'go.mod'
      - uses: actions/download-artifact@v5
        with:
          name: coverage
      - name: check test coverage
        id: coverage ## this step must have id
        uses: vladopajic/go-test-coverage@v2
        with:
          profile: coverage.out
          local-prefix: github.com/kiwicom/terraform-provider-montecarlo
          threshold-file: 0
          threshold-package: 0
          threshold-total: 0
      - name: make coverage badge
        uses: action-badges/core@0.3.1
        with:
          label: coverage
          message: ${{ steps.coverage.outputs.badge-text }}
          message-color: ${{ steps.coverage.outputs.badge-color }}
          file-name: coverage.svg
          badge-branch: badges ## orphan branch where badge will be committed
          github-token: "${{ secrets.GITHUB_TOKEN }}"
  goreleaser:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # Allow goreleaser to access older tag information.
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          cache: true
          go-version-file: 'go.mod'
      - name: Generate Release Notes
        run: |
          export CURR_TAG=$(git describe --tags --abbrev=0)
          sed -n '/<a name="'$CURR_TAG'"><\/a>/,/<a name="v/p' CHANGELOG.md | sed '$d' > release-notes.md
          sed -i '/^## '$CURR_TAG'$/d' release-notes.md
          grep '<a name="'$CURR_TAG'"></a>' release-notes.md
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        id: import_gpg
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: release --clean --release-notes release-notes.md
        env:
          # GitHub sets the GITHUB_TOKEN secret automatically.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
